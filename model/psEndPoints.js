const Sequelize = require("sequelize");
const db = require("../database").pjSip;

const PsEndPoints = db.define(
  "ps_endpoints",
  {
    id: { type: Sequelize.STRING, primaryKey: true },
    transport: Sequelize.STRING,
    aors: Sequelize.STRING,
    auth: Sequelize.STRING,
    context: Sequelize.STRING,
    disallow: Sequelize.STRING,
    allow: Sequelize.STRING,
    direct_media: {
      type: Sequelize.ENUM("yes", "no"),
      allowNull: true,
    },
    connected_line_method: Sequelize.STRING,
    direct_media_method: Sequelize.STRING,
    dtmf_mode: {
      type: Sequelize.ENUM("rfc4733", "inband", "info", "auto"),
      allowNull: true,
    },
    external_media_address: Sequelize.STRING,
    force_rport: Sequelize.STRING,
    ice_support: Sequelize.STRING,
    identify_by: Sequelize.STRING,
    rewrite_contact: Sequelize.STRING,
    rtp_symmetric: Sequelize.STRING,
    send_diversion: Sequelize.STRING,
    send_pai: Sequelize.STRING,
    send_rpid: Sequelize.STRING,
    timers_min_se: Sequelize.INTEGER,
    timers: Sequelize.STRING,
    timers_sess_expires: Sequelize.INTEGER,
    callerid: Sequelize.STRING,
    callerid_privacy: Sequelize.STRING,
    callerid_tag: Sequelize.STRING,
    "100rel": Sequelize.STRING,
    aggregate_mwi: Sequelize.STRING,
    trust_id_inbound: Sequelize.STRING,
    trust_id_outbound: Sequelize.STRING,
    use_ptime: Sequelize.STRING,
    use_avpf: Sequelize.STRING,
    media_encryption: {
      type: Sequelize.ENUM("no", "sdes", "dtls", "dtls_auto"),
      allowNull: true,
    },
    inband_progress: Sequelize.STRING,
    device_state_busy_at: Sequelize.INTEGER,
    fax_detect: Sequelize.STRING,
    t38_udptl: Sequelize.STRING,
    t38_udptl_ec: Sequelize.STRING,
    t38_udptl_maxdatagram: Sequelize.INTEGER,
    t38_udptl_nat: Sequelize.STRING,
    tone_zone: Sequelize.STRING,
    language: Sequelize.STRING,
    one_touch_recording: Sequelize.STRING,
    record_on_feature: Sequelize.STRING,
    record_off_feature: Sequelize.STRING,
    rtp_engine: Sequelize.STRING,
    allow_transfer: Sequelize.STRING,
    allow_subscribe: Sequelize.STRING,
    sdp_owner: Sequelize.STRING,
    sdp_session: Sequelize.STRING,
    tos_audio: Sequelize.STRING,
    tos_video: Sequelize.STRING,
    sub_min_expiry: Sequelize.INTEGER,
    from_domain: Sequelize.STRING,
    from_user: Sequelize.STRING,
    mwi_from_user: Sequelize.STRING,
    dtls_verify: Sequelize.STRING,
    dtls_rekey: Sequelize.STRING,
    dtls_cert_file: Sequelize.STRING,
    dtls_private_key: Sequelize.STRING,
    dtls_cipher: Sequelize.STRING,
    dtls_ca_file: Sequelize.STRING,
    dtls_ca_path: Sequelize.STRING,
    dtls_setup: Sequelize.STRING,
    dtls_fingerprint: Sequelize.STRING,
    ice_ufrag: Sequelize.STRING,
    ice_pwd: Sequelize.STRING,
    media_use_received_transport: Sequelize.STRING,
    rtcp_mux: Sequelize.STRING,
    bundle: Sequelize.STRING,
    use_srflx: Sequelize.STRING,
    media_address: Sequelize.STRING,
    force_avp: Sequelize.STRING,
    media_encryption_optimistic: Sequelize.STRING,
    rpid_immediate: Sequelize.STRING,
    g726_non_standard: Sequelize.STRING,
    rtp_keepalive: Sequelize.INTEGER,
    rtp_timeout: Sequelize.INTEGER,
    rtp_timeout_hold: Sequelize.INTEGER,
    bind_rtp_to_media_address: Sequelize.STRING,
    voicemail_extension: Sequelize.STRING,
    mwi_subscribe_replaces_unsolicited: Sequelize.STRING,
    deny: Sequelize.STRING,
    permit: Sequelize.STRING,
    acl: Sequelize.STRING,
    contact_deny: Sequelize.STRING,
    contact_permit: Sequelize.STRING,
    contact_acl: Sequelize.STRING,
    subscribe_context: Sequelize.STRING,
    fax_detect_timeout: Sequelize.INTEGER,
    contact_user: Sequelize.STRING,
    preferred_codec_only: Sequelize.STRING,
    asymmetric_rtp_codec: Sequelize.STRING,
    rtcp_fb: Sequelize.STRING,
    force_rport: Sequelize.STRING,
    media_dos: Sequelize.STRING,
    trust_connected_line: Sequelize.STRING,
    send_connected_line: Sequelize.STRING,
    webrtc: Sequelize.STRING,
    incoming_mwi_mailbox: Sequelize.STRING,
  },
  {
    tableName: "ps_endpoints",
    timestamps: false,
  }
);

module.exports = PsEndPoints;
